{{template "base" .}}

{{define "title" }}
Login Page 
{{end}}

{{define "content"}}

<div class="row">
<div class="col-md-6 offset-md-3">
    <h2 class="mt-2 text-left mb-3">Login</h2>
    <hr>
    <div class="alert alert-danger text-center d-none" id="login-messages"></div>
    <form class="d-block row g-3 needs-validation" 
        method="post"
        action=""
        id="login_form"
        autocomplete="off"
        novalidate="">
        
      <div class="col-md-6">
        <label for="email" class="form-label">Login username: </label>
        <input type="text" placeholder="Username, or Email" required="" autocomplete="login_username" class="form-control" id="login_username" name="login_username">
      </div>

      <div class="col-md-6">
        <label for="email" class="form-label">Password</label>
        <input type="password" required="" autocomplete="login_password" class="form-control" id="login_password" name="login_password">
      </div>
      <a id="login-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Authenticate</a>
      </form>
    </div>
  </div>
  {{end}}

        {{define "js"}}
        <script> 
				const loginMessages = document.getElementById("login-messages")   
        function showLoginError(msg) {
            loginMessages.classList.add("alert-danger");
            loginMessages.classList.remove("alert-success");
            loginMessages.classList.remove("d-none");
            loginMessages.innerText = msg;
        }

        function showLoginSuccess() {
            loginMessages.classList.remove("alert-danger");
            loginMessages.classList.add("alert-success");
            loginMessages.classList.remove("d-none");
            loginMessages.innerText = "Authorization successful";
        }

      function val() {
     let form = document.getElementById("login_form");
     if (form.checkValidity() === false) {
         this.event.preventDefault();
         this.event.stopPropagation();
         form.classList.add("was-validated");
         return;
     }
     form.classList.add("was-validated");

     let payload = {
         email: document.getElementById("email").value,
         password: document.getElementById("password").value,
     }

     const requestOptions = {
         method: 'post',
         headers: {
             'Accept': 'application/json',
             'Content-Type': 'application/json'
         },
         body: JSON.stringify(payload),
     }

        fetch("{{.API}}/api/authenticate", requestOptions)
        .then(response => response.json())
        .then(data => {
            console.log(data);
            if (data.error === false) {
                localStorage.setItem('token', data.authentication_token.token);
                localStorage.setItem('token_expiry', data.authentication_token.expiry);
                showSuccess();
                location.href = "/";
            } else {
                showError(data.message);
            }
        })
    }
    </script>
{{end}}